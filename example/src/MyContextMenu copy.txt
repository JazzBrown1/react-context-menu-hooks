import React from 'react';
import { ContextMenu, useContextMenu, createBridge } from 'react-context-menu-hooks';

type ShapeType = 'circle' | 'square' | 'none';

interface ContextMenuTriggerData {
  color: string,
  changeColor: (color: string) => void;
  shape: ShapeType,
  changeShape: (shape: ShapeType) => void;
}

export const myContextMenuBridge = createBridge<ContextMenuTriggerData>({
  color: 'none',
  changeColor: () => { /* do nothing */ },
  shape: 'none',
  changeShape: () => { /* do nothing */ },
});

function MyContextMenu():JSX.Element {
  const { data } = useContextMenu(myContextMenuBridge);
  const { changeColor, color } = data;

  return (
    <ContextMenu dark bridge={myContextMenuBridge}>
      <ContextMenu.Option onClick={() => {}}>Copy Shape Style</ContextMenu.Option>
      <ContextMenu.Option onClick={() => {}}>Paste Shape Style</ContextMenu.Option>
      <ContextMenu.Divider />
      <ContextMenu.SideMenu onSelect={(action) => { changeColor(action); }} text="Select Shape">
        <ContextMenu.Option action="square">Change to Square</ContextMenu.Option>
        <ContextMenu.Option action="circle">Change to Circle</ContextMenu.Option>
      </ContextMenu.SideMenu>
      <ContextMenu.Divider />
      <ContextMenu.SideMenu onSelect={(action) => { changeColor(action); }} text="Select Color">
        <ContextMenu.Option disabled={color === 'yellow'} action="yellow">Change to Yellow</ContextMenu.Option>
        <ContextMenu.Option disabled={color === 'green'} action="green">Change to Green</ContextMenu.Option>
        <ContextMenu.Option disabled={color === 'red'} action="red">Change to Red</ContextMenu.Option>
        <ContextMenu.Option disabled={color === 'blue'} action="blue">Change to Blue</ContextMenu.Option>
      </ContextMenu.SideMenu>
    </ContextMenu>
  );
}

export default MyContextMenu;
